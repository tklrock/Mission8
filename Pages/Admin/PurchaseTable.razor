@{ var tableClassLevel = "";
    var buttonClassLevel = "";}
@if (Purchases?.Count() > 0)
{
    if (Purchases.ToList()[0].PurchaseShipped == true)
    {
        tableClassLevel = "table-secondary";
        buttonClassLevel = "btn-danger";
    }
    else
    {
        tableClassLevel = "table-light";
        buttonClassLevel = "btn-success";
    }
}
else
{
    tableClassLevel = "table-dark";
}


<table class="table table-sm table-striped table-bordered table-hover  @tableClassLevel ">

    <thead class="thead-dark text-white">
        <tr>
            <th colspan="5" class="text-center">@TableTitle</th>
        </tr>
    </thead>

    <tbody>
        @if (Purchases?.Count() > 0)
        {
            @foreach (Purchase p in Purchases)
            {
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Zip</td>
                    <th>Book</th>
                    <th>Quantity</th>

                    <td>
                        <button class="btn btn-sm @buttonClassLevel" @onclick="@(x=> PurchaseSelected.InvokeAsync(p.PurchaseId))">
                            @ButtonLabel
                        </button>
                    </td>
                </tr>

                @foreach(CartLineItem cli in p.Lines)
                {
                    <tr>
                        <td colspan="2"></td>
                        <td>@cli.Book.Title</td>
                        <td>@cli.Quantity</td>
                    </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Orders</td>
            </tr>
        }
    </tbody>

</table>






@code {

    [Parameter]
    public string TableTitle { get; set; } = "Purchases";

    [Parameter]
    public IEnumerable<Purchase> Purchases { get; set; }

    [Parameter]
    public string ButtonLabel { get; set; } = "Purchased";

    [Parameter]
    public EventCallback<int> PurchaseSelected { get; set; }

}